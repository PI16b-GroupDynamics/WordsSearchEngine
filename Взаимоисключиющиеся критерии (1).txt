// Проверка на совместимость выбранных критериев.
        private void CheckCriteriaIntegrity()
        {
            if (CapitalizedW.Checked || AbbreviationW.Checked || EnglishWordsCriteria.Checked ||
                WLength.Checked || WCombination.Checked)
            {
                GivenW.Enabled = false;
                GivenW.Checked = false;
                WordValue.Enabled = false;
            }
            else
            {
                GivenW.Enabled = true;
                WordValue.Enabled = true;
            }

            if (!GivenW.Checked) return;
            CapitalizedW.Enabled = false;
            CapitalizedW.Checked = false;
            AbbreviationW.Enabled = false;
            AbbreviationW.Checked = false;
            EnglishWordsCriteria.Enabled = false;
            EnglishWordsCriteria.Checked = false;
            WLength.Enabled = false;
            WLength.Checked = false;
            LengthValue.Enabled = false;
            WCombination.Enabled = false;
            CombinationValue.Enabled = false;
            WCombination.Checked = false;
        }

        // Изменяем доступ к взаимоисключаеющимся критериям.
        // Метод изменяет доступ только тогда, когда он задан, в противном случае - оставляет текущее значение.
        private void ChangeCriteriaAccess(string capitalLetter = "", string abbreviation = "", string englishWords = "",
            string length = "", string combination = "", string givenWord = "")
        {
            if (capitalLetter != "") CapitalizedW.Enabled = Convert.ToBoolean(capitalLetter);
            if (abbreviation != "") AbbreviationW.Enabled = Convert.ToBoolean(abbreviation);
            if (englishWords != "") EnglishWordsCriteria.Enabled = Convert.ToBoolean(englishWords);

            if (length != "")
            {
                WLength.Enabled = Convert.ToBoolean(length);
                LengthValue.Enabled = Convert.ToBoolean(length);
            }

            if (combination != "")
            {
                WCombination.Enabled = Convert.ToBoolean(combination);
                CombinationValue.Enabled = Convert.ToBoolean(combination);
            }

            if (givenWord != "")
            {
                GivenW.Enabled = Convert.ToBoolean(givenWord);
                WordValue.Enabled = Convert.ToBoolean(givenWord);
            }

            CheckCriteriaIntegrity();
        }

        private void CapitalizedW_CheckedChanged(object sender, EventArgs e)
        {
            if (CapitalizedW.Checked)
                ChangeCriteriaAccess(abbreviation: "false", givenWord: "false");
            else ChangeCriteriaAccess(abbreviation: WCombination.Checked ? "false" : "true", givenWord: "true");
        }


        private void AbbreviationW_CheckedChanged(object sender, EventArgs e)
        {
            if(AbbreviationW.Checked)
                ChangeCriteriaAccess("false", givenWord: "false", combination: "false");
            else ChangeCriteriaAccess("true", givenWord: "true", combination: "true");
        }

        private void EnglishWordsCriteria_CheckedChanged(object sender, EventArgs e)
        {
            ChangeCriteriaAccess(givenWord: EnglishWordsCriteria.Checked ? "false" : "true");
        }

        private void WLength_CheckedChanged(object sender, EventArgs e)
        {
            ChangeCriteriaAccess(givenWord: WLength.Checked ? "false" : "true");
        }

        private void WCombination_CheckedChanged(object sender, EventArgs e)
        {
            if (WCombination.Checked)
                ChangeCriteriaAccess(abbreviation: "false", givenWord: "false");
            else ChangeCriteriaAccess(abbreviation: CapitalizedW.Checked ? "false" : "true", givenWord: "true");
        }

        private void GivenW_CheckedChanged(object sender, EventArgs e)
        {
            if (GivenW.Checked)
                ChangeCriteriaAccess("false", "false", "false", "false", "false");
            else ChangeCriteriaAccess("true", "true", "true", "true", "true");
        }